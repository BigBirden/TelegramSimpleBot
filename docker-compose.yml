services:
  bot:
    build: 
      dockerfile: Dockerfile
      context: .
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BOT_TOKEN=${BOT_TOKEN}
    depends_on:
      - db
    volumes:
      - ./app:/app

  db:
    image: postgres:13-alpine           # Используем официальный образ PostgreSQL
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  alembic:
    build:
      dockerfile: Dockerfile.alembic
      context: .
    volumes:
      - ./app/alembic/:/app/alembic/
      - ./alembic.ini:/alembic.ini                                  # аналогично для конфига
      - ./app/models.py:/app/models.py
      - ./app/db.py:/app/db.py
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db

  server:
    build: 
      dockerfile: Dockerfile.server
      context: .
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8000:8000"  # Хост:8000 → Контейнер:8000
    volumes:
      # Монтируем только нужные файлы
      - ./server/:/app/server/:cached
      - ./app/db.py:/app/app/db.py:cached
      - ./app/models.py:/app/app/models.py:cached

volumes:
  postgres_data: