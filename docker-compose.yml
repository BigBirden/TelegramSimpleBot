services:
  bot:
    build: 
      dockerfile: Dockerfile
      context: .
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BOT_TOKEN=${BOT_TOKEN}
    depends_on:
      - db
    volumes:
      #- ./app:/app
      - ./app/alembic/versions:/app/alembic/versions
      - ./app/alembic/env.py:/app/alembic/env.py
      - ./app/alembic/script.py.mako:/app/alembic/script.py.mako
      - ./app/data:/app/data
      - ./app/picts:/app/picts
      - ./app/db.py:/app/db.py
      - ./app/func.py:/app/func.py
      - ./app/handlers.py:/app/handlers.py
      - ./app/keyboards.py:/app/keyboards.py
      - ./app/logger.py:/app/logger.py
      - ./app/main.py:/app/main.py
      - ./app/middlewares.py:/app/middlewares.py
      - ./app/models.py:/app/models.py

  db:
    image: postgres:13-alpine           # Используем официальный образ PostgreSQL
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  alembic:
    build:
      dockerfile: Dockerfile.alembic
      context: .
    volumes:
      - ./app/alembic/versions:/app/alembic/versions                # Монтируем алембик без кэша
      - ./app/alembic/env.py:/app/alembic/env.py                    # !Внимание! - в папке versions переносится pycache
      - ./app/alembic/script.py.mako:/app/alembic/script.py.mako
      - ./alembic.ini:/app/alembic.ini                                  # аналогично для конфига
      - ./app/models.py:/app/models.py
      - ./app/db.py:/app/db.py
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - db
    
volumes:
  postgres_data: